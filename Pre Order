#include<iostream>
using namespace std;
struct node{
    int data;
    node * left;
    node * right;
};
node * create_node(int val)
{
    node * temp=new node;
    temp->data=val;
    temp->left=temp->right=NULL;
    return temp;
}
void preorder(node * root)
{
    if(root!=NULL)
    {
        cout<<root->data<<" ";
        preorder(root->left);
        preorder(root->right);
    }
}
node * insert_node(node * node , int val)
{
    if(node==NULL)
    return create_node(val);
    if(val<node->data)
    node->left=insert_node(node->left,val);
    else if(val>node->data)
    node->right=insert_node(node->right,val);
    return node;
}
int main()
{
    node*root=NULL;
    int val,choice;
    while(1)
    {
        cout<<endl;
        cout<<"Aryan Jain";
        cout<<endl<<endl;
        cout<<"1. Insert Node"<<endl;
        cout<<"2. Display"<<endl;
        cout<<"3. Exit"<<endl;
        cout<<"Enter choice:";
        cin>>choice;
        switch(choice)
        {
            case 1:
            {
                cout<<"Enter the data:";
                cin>>val;
                root=insert_node(root,val);
                break;
            }
            case 2:
            {
                cout<<"preorder reversal of binary tree"<<endl;
                preorder(root);
                break;
            }
            case 3:
            {
                exit(1);
            }
        }
    }
    return 0;
}
